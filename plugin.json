{
  "gameName": "Plugin Name",
  "pluginVersion": "1.0",
  "authorName": "Your Name Here",
  "views": {
    "name": "app",
    "children": [
      {
        "name": "Summary",
        "type": "view",
        "children": [
          {
            "type": "textfield",
            "name": "characterName",
            "label": "Name",
            "bind": "$state.character.name"
          }
        ]
      },
      {
        "name": "Priorities",
        "type": "view",
        "children": [
          {
            "name": "priorities",
            "type": "container",
            "direction": "vertical",
            "children": [
              {
                "name": "priorityA",
                "type": "container",
                "direction": "horizontal",
                "border": "black",
                "children": [
                  {
                    "name": "priorityA",
                    "type": "label",
                    "text": "Priority A"
                  },
                  {
                    "name": "priorityASelection",
                    "type": "label",
                    "text": "#$rules.characterCreation.options[$state.character.creation.priorities.A]"
                  },
                  {
                    "name": "priorityAControls",
                    "type": "container",
                    "direction": "vertical",
                    "children": [
                      {
                        "name": "priorityAUp",
                        "type": "button",
                        "text": " ",
                        "hiddenWhen": "#true"
                      },
                      {
                        "name": "priorityADown",
                        "type": "button",
                        "text": "▼",
                        "action": {
                          "type": "SWAP",
                          "path": [
                            "$state.character.creation.priorities.A",
                            "$state.character.creation.priorities.B"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "name": "priorityADescription",
                    "type": "label",
                    "text": "# _.get($rules, 'characterCreation.priorities.A[' +  $state.character.creation.priorities.A + '].description')"
                  }
                ]
              },
              {
                "name": "priorityB",
                "type": "container",
                "direction": "horizontal",
                "border": "black",
                "children": [
                  {
                    "name": "priorityB",
                    "type": "label",
                    "text": "Priority B"
                  },
                  {
                    "name": "priorityBSelection",
                    "type": "label",
                    "text": "#$rules.characterCreation.options[$state.character.creation.priorities.B]"
                  },
                  {
                    "name": "priorityBControls",
                    "type": "container",
                    "direction": "vertical",
                    "children": [
                      {
                        "name": "priorityBUp",
                        "type": "button",
                        "text": "▲",
                        "action": {
                          "type": "SWAP",
                          "path": [
                            "$state.character.creation.priorities.A",
                            "$state.character.creation.priorities.B"
                          ]
                        }
                      },
                      {
                        "name": "priorityBDown",
                        "type": "button",
                        "text": "▼",
                        "action": {
                          "type": "SWAP",
                          "path": [
                            "$state.character.creation.priorities.B",
                            "$state.character.creation.priorities.C"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "name": "priorityBDescription",
                    "type": "label",
                    "text": "# _.get($rules, 'characterCreation.priorities.B[' +  $state.character.creation.priorities.B + '].description')"
                  }
                ]
              },
              {
                "name": "priorityC",
                "type": "container",
                "direction": "horizontal",
                "border": "black",
                "children": [
                  {
                    "name": "priorityC",
                    "type": "label",
                    "text": "Priority C"
                  },
                  {
                    "name": "priorityCSelection",
                    "type": "label",
                    "text": "#$rules.characterCreation.options[$state.character.creation.priorities.C]"
                  },
                  {
                    "name": "priorityCControls",
                    "type": "container",
                    "direction": "vertical",
                    "children": [
                      {
                        "name": "priorityCUp",
                        "type": "button",
                        "text": "▲",
                        "action": {
                          "type": "SWAP",
                          "path": [
                            "$state.character.creation.priorities.B",
                            "$state.character.creation.priorities.C"
                          ]
                        }
                      },
                      {
                        "name": "priorityCDown",
                        "type": "button",
                        "text": "▼",
                        "action": {
                          "type": "SWAP",
                          "path": [
                            "$state.character.creation.priorities.C",
                            "$state.character.creation.priorities.D"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "name": "priorityCDescription",
                    "type": "label",
                    "text": "# _.get($rules, 'characterCreation.priorities.C[' +  $state.character.creation.priorities.C + '].description')"
                  }
                ]
              },
              {
                "name": "priorityD",
                "type": "container",
                "direction": "horizontal",
                "border": "black",
                "children": [
                  {
                    "name": "priorityD",
                    "type": "label",
                    "text": "Priority D"
                  },
                  {
                    "name": "priorityDSelection",
                    "type": "label",
                    "text": "#$rules.characterCreation.options[$state.character.creation.priorities.D]"
                  },
                  {
                    "name": "priorityDControls",
                    "type": "container",
                    "direction": "vertical",
                    "children": [
                      {
                        "name": "priorityDUp",
                        "type": "button",
                        "text": "▲",
                        "action": {
                          "type": "SWAP",
                          "path": [
                            "$state.character.creation.priorities.C",
                            "$state.character.creation.priorities.D"
                          ]
                        }
                      },
                      {
                        "name": "priorityDDown",
                        "type": "button",
                        "text": "▼",
                        "action": {
                          "type": "SWAP",
                          "path": [
                            "$state.character.creation.priorities.D",
                            "$state.character.creation.priorities.E"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "name": "priorityDDescription",
                    "type": "label",
                    "text": "# _.get($rules, 'characterCreation.priorities.D[' +  $state.character.creation.priorities.D + '].description')"
                  }
                ]
              },
              {
                "name": "priorityE",
                "type": "container",
                "direction": "horizontal",
                "border": "black",
                "children": [
                  {
                    "name": "priorityE",
                    "type": "label",
                    "text": "Priority E"
                  },
                  {
                    "name": "priorityESelection",
                    "type": "label",
                    "text": "#$rules.characterCreation.options[$state.character.creation.priorities.E]"
                  },
                  {
                    "name": "priorityEControls",
                    "type": "container",
                    "direction": "vertical",
                    "children": [
                      {
                        "name": "priorityEUp",
                        "type": "button",
                        "text": "▲",
                        "action": {
                          "type": "SWAP",
                          "path": [
                            "$state.character.creation.priorities.D",
                            "$state.character.creation.priorities.E"
                          ]
                        }
                      }
                    ]
                  },
                  {
                    "name": "priorityEDescription",
                    "type": "label",
                    "text": "# _.get($rules, 'characterCreation.priorities.E[' +  $state.character.creation.priorities.E + '].description')"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "Metatype and Attributes",
        "type": "view",
        "children": [
          {
            "name": "chooseMetatype",
            "type": "select",
            "bind": "$state.character.creation.metatypeChoice",
            "items": {
              "values": "#_.get($rules.characterCreation.priorities, '[' + $state.character.creation.priorities.metatype + '].metatype.options', [])",
              "translate": "#_.get($models, 'metatype.values[' + $this.metatype + '].name')"
            }
          },
          {
            "name": "startingEdge",
            "type": "label",
            "text": "#'Special Attribute Points: ' + $state.character.creation.metatypeChoice.specialAttributePoints"
          },
          {
            "name": "attributes",
            "type": "container",
            "direction": "horizontal",
            "children": [
              {
                "name": "body",
                "type": "number",
                "label": "Body",
                "bind": "$state.character.baseAttributes.body"
              },
              {
                "name": "agility",
                "type": "number",
                "label": "Agility",
                "bind": "$state.character.baseAttributes.agility"
              },
              {
                "name": "reaction",
                "type": "number",
                "label": "Reaction",
                "bind": "$state.character.baseAttributes.reaction"
              },
              {
                "name": "strength",
                "type": "number",
                "label": "Strength",
                "bind": "$state.character.baseAttributes.strength"
              },
              {
                "name": "willpower",
                "type": "number",
                "label": "Willpower",
                "bind": "$state.character.baseAttributes.willpower"
              },
              {
                "name": "logic",
                "type": "number",
                "label": "Logic",
                "bind": "$state.character.baseAttributes.logic"
              },
              {
                "name": "intuition",
                "type": "number",
                "label": "Intuition",
                "bind": "$state.character.baseAttributes.intuition"
              },
              {
                "name": "charisma",
                "type": "number",
                "label": "Charisma",
                "bind": "$state.character.baseAttributes.charisma"
              }
            ]
          }
        ]
      }
    ]
  },
  "model": {
    "character": {
      "properties": {
        "name": "string",
        "creation": "creation",
        "metatype": {
          "type": "metatype",
          "derivedFrom": [
            "#$models.metatype.values[$state.character.creation.metatypeChoice.metatype]"
          ]
        },
        "baseAttributes": "characterAttributes"
      }
    },
    "characterAttributes": {
      "properties": {
        "body": {
          "type": "number",
          "derivedFrom": [
            "#_.get($state, 'character.metatype.minBody')"
          ]
        },
        "agility": {
          "type": "number",
          "derivedFrom": [
            "#_.get($state, 'character.metatype.minAgility')"
          ]
        },
        "reaction": {
          "type": "number",
          "derivedFrom": [
            "#_.get($state, 'character.metatype.minReaction')"
          ]
        },
        "strength": {
          "type": "number",
          "derivedFrom": [
            "#_.get($state, 'character.metatype.minStrength')"
          ]
        },
        "willpower": {
          "type": "number",
          "derivedFrom": [
            "#_.get($state, 'character.metatype.minWillpower')"
          ]
        },
        "logic": {
          "type": "number",
          "derivedFrom": [
            "#_.get($state, 'character.metatype.minLogic')"
          ]
        },
        "intuition": {
          "type": "number",
          "derivedFrom": [
            "#_.get($state, 'character.metatype.minIntuition')"
          ]
        },
        "charisma": {
          "type": "number",
          "derivedFrom": [
            "#_.get($state, 'character.metatype.minCharisma')"
          ]
        }
      }
    },
    "creation": {
      "properties": {
        "priorities": "priorities",
        "metatypeChoice": "metatypeChoice"
      }
    },
    "metatypeChoice": {
      "properties": {
        "metatype": "string",
        "specialAttributePoints": "number"
      }
    },
    "priorities": {
      "properties": {
        "A": {
          "type": "string",
          "default": "metatype"
        },
        "B": {
          "type": "string",
          "default": "attributes"
        },
        "C": {
          "type": "string",
          "default": "special"
        },
        "D": {
          "type": "string",
          "default": "skills"
        },
        "E": {
          "type": "string",
          "default": "resources"
        },
        "metatype": {
          "type": "string",
          "derivedFrom": [
            "#Object.entries($state.character.creation.priorities).find(p => p[1] === 'metatype')[0]"
          ]
        },
        "attributes": {
          "type": "string",
          "derivedFrom": [
            "#Object.entries($state.character.creation.priorities).find(p => p[1] === 'attributes')[0]"
          ]
        },
        "special": {
          "type": "string",
          "derivedFrom": [
            "#Object.entries($state.character.creation.priorities).find(p => p[1] === 'special')[0]"
          ]
        },
        "skills": {
          "type": "string",
          "derivedFrom": [
            "#Object.entries($state.character.creation.priorities).find(p => p[1] === 'skills')[0]"
          ]
        },
        "resources": {
          "type": "string",
          "derivedFrom": [
            "#Object.entries($state.character.creation.priorities).find(p => p[1] === 'resources')[0]"
          ]
        }
      }
    },
    "metatype": {
      "properties": {
        "id": "string",
        "name": "string",
        "minBody": {
          "type": "number",
          "default": 1
        },
        "maxBody": {
          "type": "number",
          "default": 6
        },
        "minAgility": {
          "type": "number",
          "default": 1
        },
        "maxAgility": {
          "type": "number",
          "default": 6
        },
        "minReaction": {
          "type": "number",
          "default": 1
        },
        "maxReaction": {
          "type": "number",
          "default": 6
        },
        "minStrength": {
          "type": "number",
          "default": 1
        },
        "maxStrength": {
          "type": "number",
          "default": 6
        },
        "minWillpower": {
          "type": "number",
          "default": 1
        },
        "maxWillpower": {
          "type": "number",
          "default": 6
        },
        "minLogic": {
          "type": "number",
          "default": 1
        },
        "maxLogic": {
          "type": "number",
          "default": 6
        },
        "minIntuition": {
          "type": "number",
          "default": 1
        },
        "maxIntuition": {
          "type": "number",
          "default": 6
        },
        "minCharisma": {
          "type": "number",
          "default": 1
        },
        "maxCharisma": {
          "type": "number",
          "default": 6
        },
        "minEdge": {
          "type": "number",
          "default": 1
        },
        "maxEdge": {
          "type": "number",
          "default": 6
        },
        "racialTraits": "[trait]"
      },
      "values": [
        {
          "id": "human",
          "name": "Human",
          "minEdge": 2,
          "maxEdge": 7
        },
        {
          "id": "elf",
          "name": "Elf",
          "minAgility": 2,
          "maxAgility": 7,
          "minCharisma": 3,
          "maxCharisma": 8,
          "racialTraits": [
            "low-light-vision"
          ]
        },
        {
          "id": "dwarf",
          "name": "Dwarf",
          "minBody": 3,
          "maxBody": 8,
          "maxReaction": 5,
          "minStrength": 3,
          "maxStrength": 8,
          "minWillpower": 2,
          "maxWillpower": 7,
          "racialTraits": [
            "dwarf-resistance",
            "dwarf-lifestyle-increase"
          ]
        },
        {
          "id": "ork",
          "name": "Ork",
          "minBody": 4,
          "maxBody": 9,
          "minStrength": 3,
          "maxStrength": 8,
          "maxLogic": 5,
          "maxCharisma": 5,
          "racialTraits": [
            "low-light-vision"
          ]
        },
        {
          "id": "troll",
          "name": "Troll",
          "minBody": 5,
          "maxBody": 10,
          "maxAgility": 5,
          "minStrength": 5,
          "maxStrength": 10,
          "maxLogic": 5,
          "maxIntuition": 5,
          "maxCharisma": 4,
          "racialTraits": [
            "thermographic-vision",
            "troll-increased-reach",
            "troll-dermal-armor",
            "troll-lifetyle-increase"
          ]
        }
      ]
    },
    "racialTrait": {
      "properties": {}
    }
  },
  "rules": {
    "characterCreation": {
      "options": {
        "metatype": "Metatype",
        "attributes": "Attributes",
        "special": "Magic or Resonance",
        "skills": "Skills",
        "resources": "Resources"
      },
      "priorities": {
        "A": {
          "metatype": {
            "description": "Human (9), Elf (8), Dwarf(7), Ork(7), Troll(5)",
            "options": [
              {
                "metatype": "human",
                "specialAttributePoints": 9
              },
              {
                "metatype": "elf",
                "specialAttributePoints": 8
              },
              {
                "metatype": "dwarf",
                "specialAttributePoints": 7
              },
              {
                "metatype": "ork",
                "specialAttributePoints": 7
              },
              {
                "metatype": "troll",
                "specialAttributePoints": 5
              }
            ]
          },
          "attributes": {
            "description": 24
          },
          "special": {
            "description": "Magician or Mystic Adept: Magic 6, 2 x Rating 5 Magical Skills, 10 spells; Technomancer: Resonance 6, 2 x Rating 5 Resonance Skills, 5 complex forms",
            "options": [
              {
                "description": "Magician or Mystic Adept: Magic 6, 2 x Rating 5 Magical Skills, 10 spells ",
                "types": [
                  "magician",
                  "mystic adept"
                ],
                "magicRating": 6,
                "skills": {
                  "magic": {
                    "quantity": 2,
                    "rating": 5
                  }
                },
                "spells": 10
              },
              {
                "description": "Technomancer: Resonance 6, 2 x Rating 5 Resonance Skills, 5 complex forms",
                "types": [
                  "technomancer"
                ],
                "resonanceRating": 6,
                "skills": {
                  "resonance": {
                    "quantity": 2,
                    "rating": 5
                  }
                },
                "complexForms": 5
              }
            ]
          },
          "skills": {
            "description": "46/10",
            "totalPoints": 46,
            "maxGroups": 10
          },
          "resources": {
            "description": "450,000￥"
          }
        },
        "B": {
          "metatype": {
            "description": "Human (7), Elf (6), Dwarf (4), Ork (4), Troll (0)",
            "options": [
              {
                "metatype": "human",
                "specialAttributePoints": 7
              },
              {
                "metatype": "elf",
                "specialAttributePoints": 6
              },
              {
                "metatype": "dwarf",
                "specialAttributePoints": 4
              },
              {
                "metatype": "ork",
                "specialAttributePoints": 4
              },
              {
                "metatype": "troll",
                "specialAttributePoints": 0
              }
            ]
          },
          "attributes": {
            "description": 20
          },
          "special": {
            "description": "Magician or Mystic Adept: Magic 4, 2 x Rating 4 Magical Skills, 7 spells; Technomander: Resonance 4, 2 x rating 4 Resonance skills, 2 x complex forms; Adept: Magic 6, 1 x Rating 4 Active skill; Aspected Magician: Magic 5, 1 x Rating 4 Magical skill group",
            "options": [
              {
                "types": [
                  "magician",
                  "mystic adept"
                ],
                "magicRating": 4,
                "skills": {
                  "magic": {
                    "quantity": 2,
                    "rating": 4
                  }
                },
                "spells": 7
              },
              {
                "types": [
                  "technomancer"
                ],
                "resonanceRating": 4,
                "resonanceSkills": {
                  "quantity": 2,
                  "rating": 4
                },
                "complexForms": 2
              },
              {
                "types": [
                  "adept"
                ],
                "magicRating": 6,
                "skills": {
                  "active": {
                    "quantity": 1,
                    "rating": 4
                  }
                }
              },
              {
                "types": [
                  "aspected magician"
                ],
                "magicRating": 5,
                "skills": {
                  "magic": {
                    "group": true,
                    "quantity": 1,
                    "rating": 4
                  }
                }
              }
            ]
          },
          "skills": {
            "description": "36/5",
            "totalPoints": 36,
            "maxGroups": 5
          },
          "resources": {
            "description": "275,000￥"
          }
        },
        "C": {
          "metatype": {
            "description": "Human (5), Elf (3), Dwarf (1), Ork (0)",
            "options": [
              {
                "metatype": "human",
                "specialAttributePoints": 5
              },
              {
                "metatype": "elf",
                "specialAttributePoints": 3
              },
              {
                "metatype": "dwarf",
                "specialAttributePoints": 1
              },
              {
                "metatype": "ork",
                "specialAttributePoints": 0
              }
            ]
          },
          "attributePoints": {
            "description": 16
          },
          "special": {
            "description": "Magician or Mystic Adept: Magic 3, 5 spells; Technomancer: Resonance 3, 1 complex form; Adept: Magic 4, 1 x Rating 2 Active skill; Aspected Magician: Magic 3, 1 x Rating 2 Magical skill group",
            "options": [
              {
                "types": [
                  "magician",
                  "mystic adept"
                ],
                "magicRating": 3,
                "spells": 7
              },
              {
                "types": [
                  "technomancer"
                ],
                "resonanceRating": 3,
                "complexForms": 1
              },
              {
                "types": [
                  "adept"
                ],
                "magicRating": 4,
                "skills": {
                  "active": {
                    "quantity": 1,
                    "rating": 2
                  }
                }
              },
              {
                "types": [
                  "aspected magician"
                ],
                "magicRating": 3,
                "skills": {
                  "magic": {
                    "group": true,
                    "quantity": 1,
                    "rating": 2
                  }
                }
              }
            ]
          },
          "skills": {
            "description": "28/2",
            "totalPoints": 28,
            "maxGroups": 2
          },
          "resources": {
            "description": "140,000￥"
          }
        },
        "D": {
          "metatype": {
            "description": "Human (3), Elf (0)",
            "options": [
              {
                "metatype": "human",
                "specialAttributePoints": 3
              },
              {
                "metatype": "elf",
                "specialAttributePoints": 0
              }
            ]
          },
          "attributePoints": {
            "description": 14
          },
          "special": {
            "description": "Adept: Magic 2; Aspected Magician: Magic 2",
            "options": [
              {
                "types": [
                  "adept"
                ],
                "magicRating": 2
              },
              {
                "types": [
                  "aspected magician"
                ],
                "magicRating": 2
              }
            ]
          },
          "skills": {
            "description": "22/0",
            "totalPoints": 22
          },
          "resources": {
            "description": "50000￥"
          }
        },
        "E": {
          "metatype": {
            "description": "Human (0)",
            "options": [
              {
                "metatype": "human",
                "specialAttributePoints": 1
              }
            ]
          },
          "attributePoints": {
            "description": 12
          },
          "special": {
            "description": "None"
          },
          "skills": {
            "description": "18/0",
            "totalPoints": 18
          },
          "resources": {
            "money": 6000,
            "description": "6000￥"
          }
        }
      }
    }
  },
  "hooks": [
    {
      "before": "SET",
      "when": "$this.path === '$state.character.creation.priorities"
    }
  ]
}
